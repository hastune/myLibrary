<?xml version="1.0" encoding="UTF-8"?>

<!-- Log4j 2.x 配置文件。每30秒自动检查和应用配置文件的更新； -->
<!-- status : 这个用于设置log4j2自身内部的信息输出,可以不设置,当设置成trace时,会看到log4j2内部各种详细输出 monitorInterval 
    : Log4j能够自动检测修改配置文件和重新配置本身, 设置间隔秒数。 注：本配置文件的目标是将不同级别的日志输出到不同文件，最大2MB一个文件， 
    文件数据达到最大值时，旧数据会被压缩并放进指定文件夹 -->
<configuration status="warn" monitorInterval="30" strict="true" schema="Log4J-V2.2.xsd">

<!-- 配置日志文件输出目录，此配置将日志输出到tomcat根目录下的指定文件夹 -->
    <Properties>
        <Property name="logdir">${sys:catalina.base}/logs</Property>
    </Properties>
    
    <appenders>
    	<!-- 优先级从高到低分别是 OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL -->
        <!-- 单词解释： Match：匹配 DENY：拒绝 Mismatch：不匹配 ACCEPT：接受 -->
        <!-- DENY，日志将立即被抛弃不再经过其他过滤器； NEUTRAL，有序列表里的下个过滤器过接着处理日志； ACCEPT，日志会被立即处理，不再经过剩余过滤器。 -->
        <!--输出日志的格式
         %d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间
         %p : 日志输出格式
         %c : logger的名称 
         %m : 日志内容，即 logger.info("message") 
         %n : 换行符 
         %C : Java类名
         %L : 日志输出所在行数 
         %M : 日志输出所在方法名 
         hostName : 本地机器名 
         hostAddress : 本地ip地址 -->
    	
    	
        <!-- 输出到控制台 -->
        <console name="Console" target="SYSTEM_OUT">
            <!-- 需要记录的级别 -->
             <!-- 控制台只输出level及以上级别的信息(onMatch),其他的直接拒绝(onMismatch) . -->
         <!--   <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY" />-->
           <!-- 输出日志的格式 -->
            <PatternLayout pattern="%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %level [%C{36}.%M] - %msg%n"/>
        </console>
        
        
        <!-- 输出到文件，按天或者超过80MB分割 -->
        <rollingFile name="RollingFile" 
                     filePattern="${logdir}/logs/$${date:yyyy-MM}/sm-%d{yyyy-MM-dd}-%i.log.gz">
            <!-- 需要记录的级别 -->
            <!--  <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY" />-->
            <PatternLayout pattern="%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %level [%C{36}.%M] - %msg%n"/>
            <policies>
                <onStartupTriggeringPolicy/>
                <timeBasedTriggeringPolicy/>
                 <!-- 每个日志文件最大1MB -->
                <sizeBasedTriggeringPolicy size="5 MB"/>
            </policies>
        </rollingFile>
    </appenders>
    
    <loggers>
        <!-- 全局配置 -->
        <!-- 定义logger，只有定义了logger并引入了appender，appender才会生效 -->
        <root level="info"> 
            <appenderRef ref="Console"/>
            <appenderRef ref="RollingFile"/>
        </root>
        <logger name="org.springframework.web" level="info" additivity="false">
            <appenderRef ref="Console"/>
        </logger>
        <logger name="com.mc.core.service" level="info" additivity="false">
            <appender-ref ref="Console"/>
        </logger>
        <logger name="org.apache.ibatis" level="debug"/>
   	    <logger name="org.mybatis" level="debug"/>
   	    <logger name="com.sm" level="debug"/>
        <!-- druid配置 
        <logger name="druid.sql.Statement" level="debug" additivity="true">
            <appender-ref ref="Console"/>
        </logger>
        <logger name="druid.sql.ResultSet" level="debug" additivity="true">
            <appender-ref ref="Console"/>
        </logger>-->
    </loggers>
</configuration>
